/*
 * Copyright (C) 2015 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion
    defaultConfig {
        versionCode 1
        versionName version
        minSdkVersion 8
        consumerProguardFiles 'proguard.txt'
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            buildConfigField "String", "GROUP", "\"${pom_group_id}\""
            buildConfigField "String", "ARTIFACT_ID", "\"${pom_artifact_id}\""
            buildConfigField "String", "BUILD_NUMBER", "\"${buildNumber}\""
            buildConfigField "long", "BUILD_TIME", "${System.currentTimeMillis()}L"
        }
        release {
            buildConfigField "String", "GROUP", "\"${pom_group_id}\""
            buildConfigField "String", "ARTIFACT_ID", "\"${pom_artifact_id}\""
            buildConfigField "String", "BUILD_NUMBER", "\"${buildNumber}\""
            buildConfigField "long", "BUILD_TIME", "${System.currentTimeMillis()}L"
        }
    }

    lintOptions {
        warningsAsErrors false
        abortOnError false
    }

    packagingOptions {
        exclude 'LICENSE.txt'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_6
        targetCompatibility JavaVersion.VERSION_1_6
    }

    // Forcibly add debug and the generated "R" files onto the test classpath
    sourceSets {
        test.java.srcDirs += "build/generated/source/r/debug"
        test.java.srcDirs += "src/debug"
    }

    testOptions.unitTests {
        returnDefaultValues = true
        all {
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            }
        }
    }
}

dependencies {
    compile(rootProject.twitterCore) {
        transitive = true
    }
    compile rootProject.fabric
    compile rootProject.appCompat

    androidTestCompile rootProject.mockito
    androidTestCompile rootProject.dexmakerMockito
    androidTestCompile rootProject.fabricTest
    androidTestCompile rootProject.androidTestingSupport

    testCompile rootProject.fabricTest
    testCompile rootProject.mockito
    testCompile rootProject.androidTestingSupport
    testCompile rootProject.junit
    testCompile(rootProject.robolectric) {
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }
    testCompile (rootProject.junitAddons) {
        transitive = false
    }
}
